#include "../cotl"

namespace cotlstd {

// arg: self, caller, lib, tunnel

_COTL_FUNC_T(std???)
_COTL_FUNC_BEGIN
    if (auto self_p = self.as<cotl::???>) {
        if (tunnel) {
            //
        } else {
            //
        }
    } else {
        throw;
    }
_COTL_FUNC_END

namespace {

_COTL_FUNC_T(init)
_COTL_FUNC_BEGIN
    PMaybe tunnel1(nullptr);

    lib.call<false>(
        _atom(id_???),
        _libmap(
            id_???, _libfunc(std???),
        ),
        tunnel1
    );
_COTL_FUNC_END

long long ago = addInitializer(init, init_???);

}

}
